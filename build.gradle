/*************************************************
gradle clean build

gradle publishToMavenLocal \
 -Ppublish=true \
 -PossrhUsername=XXX \
 -PossrhPassword=XXX

**************************************************/

plugins {
  id 'java'
  id 'com.diffplug.spotless' version '6.25.0'
}

allprojects {
  repositories {
    mavenLocal()
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'

  sourceCompatibility = zzJavaVersion
  targetCompatibility = zzJavaVersion
  tasks.withType(JavaCompile) {
    options.release = Integer.parseInt(zzJavaVersion)
  }

  // setup spotless config for all subprojects
  def spotlessConfig = {
    spotless {
      lineEndings 'UNIX'
      java {
        importOrder()
        removeUnusedImports()

        // Use Android style which has 4 whitespaces instead 2 by default
        googleJavaFormat().aosp().reflowLongStrings()

        licenseHeader '''/*
 * Copyright $YEAR %s project
 * 
 * Website: https://github.com/%s/%s
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'''.formatted(zzCopyright, zzNamespace, zzName)
      }
    }
  }

  pluginManager.withPlugin("com.diffplug.spotless", spotlessConfig);
}

ext {
  releaseFileName = "${zzName}-v${version}.zip"
}

/*
 * gradlew requires execution of gradle-wrapper.jar which trustworthy needs to
 * be checked everytime when it is updated (otherwise it do not seems secure)
 * To avoid using it we rely on manual version check
 */
if ("$gradle.gradleVersion" != zzRequiredGradleVersion)
  throw new RuntimeException("Running gradle version $gradle.gradleVersion, required $zzRequiredGradleVersion");

println "Version: ${version}"